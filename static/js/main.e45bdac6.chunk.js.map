{"version":3,"sources":["Components/Card/Card.tsx","Components/CardList/CardList.tsx","Components/SearchBar/SearchBar.tsx","App.tsx","index.tsx"],"names":["Card","name","email","city","className","src","alt","width","height","CardList","monsters","map","id","address","SearchBar","handleText","type","onChange","placeholder","App","props","fetchData","a","fetch","data","setState","loading","json","state","filteredMonsters","this","then","e","filter","monster","toLowerCase","includes","target","value","length","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kTAyBeA,G,MAnBF,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,KAC3B,OACE,sBAAKC,UAAU,yBAAf,UACE,sBAAKA,UAAU,SAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBH,IACrB,qBACEI,IAAG,+BAA0BJ,EAA1B,8BACHK,IAAI,YACJC,MAAM,QACNC,OAAO,aAGX,sBAAKJ,UAAU,SAAf,UACE,4BAAIF,IACJ,4BAAIC,YCGGM,G,MAXE,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,SAClB,OACE,qBAAKN,UAAU,qBAAf,SAEIM,EAASC,KAAI,gBAAGC,EAAH,EAAGA,GAAIX,EAAP,EAAOA,KAAMC,EAAb,EAAaA,MAAOW,EAApB,EAAoBA,QAApB,OACX,cAAC,EAAD,CAAeZ,KAAMA,EAAMC,MAAOA,EAAOC,KAAMU,EAAQV,MAA5CS,UCRNE,G,MAPG,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,WAClB,OACE,qBAAKX,UAAU,SAAf,SACE,uBAAOY,KAAK,OAAOC,SAAUF,EAAYG,YAAY,qBCkD5CC,G,wDAnCb,WAAYC,GAAe,IAAD,8BACxB,cAAMA,IAORC,UAR0B,sBAQd,4BAAAC,EAAA,sEACSC,MAAM,8CADf,cACJC,EADI,OAEV,EAAKC,SAAS,CAAEC,SAAS,IAFf,SAGGF,EAAKG,OAHR,mFANV,EAAKC,MAAQ,CACXlB,SAAU,GACVmB,iBAAkB,GAClBH,SAAS,GALa,E,gEAaL,IAAD,OAClBI,KAAKT,YAAYU,MAAK,SAACrB,GAAD,OAAc,EAAKe,SAAS,CAAEf,kB,+BAE5C,IAAD,OAMP,OACE,gCACE,oBAAIN,UAAU,SAAd,8BACA,cAAC,EAAD,CAAWW,WARQ,SAACiB,GACtB,EAAKP,UAAS,SAACG,GAAD,MAAY,CACxBC,iBAAkBD,EAAMlB,SAASuB,QAAO,SAAAC,GAAO,OAAIA,EAAQjC,KAAKkC,cAAcC,SAASJ,EAAEK,OAAOC,MAAMH,yBAQpGL,KAAKF,MAAMF,QAAU,yCACnB,cAAC,EAAD,CAAUhB,SAAUoB,KAAKF,MAAMC,iBAAiBU,OAAOT,KAAKF,MAAMC,iBAAiBC,KAAKF,MAAMlB,kB,GA7BxF8B,cCflBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e45bdac6.chunk.js","sourcesContent":["import \"./Card.css\";\ninterface Props {\n  name: string;\n  email: string;\n  city: string;\n}\nconst Card = ({ name, email, city }: Props) => {\n  return (\n    <div className=\"gradient cardContainer\">\n      <div className=\"center\">\n        <p className=\"name\">{name}</p>\n        <img\n          src={`https://robohash.org/${name}.png?set=set2&size=180x180`}\n          alt=\"a monster\"\n          width=\"100px\"\n          height=\"100px\"\n        />\n      </div>\n      <div className=\"center\">\n        <p>{email}</p>\n        <p>{city}</p>\n      </div>\n    </div>\n  );\n};\nexport default Card;\n","import Card from '../Card/Card';\nimport './CardList.css'\n\ninterface Monster {\n  id: string;\n  name: string;\n  email: string;\n  address: {\n    city: string\n  };\n}\n\nconst CardList = ({ monsters }: any) => {\n  return (\n    <div className=\"cardListContainer \">\n      {\n        monsters.map(({ id, name, email, address }: Monster) => (\n          <Card key={id} name={name} email={email} city={address.city} />\n        ))\n      }\n    </div>\n  )\n}\nexport default CardList;\n","import './SearchBar.css'\n\nconst SearchBar = ({handleText}:any)=> {\n  return (\n    <div className='center'>\n      <input type='text' onChange={handleText} placeholder=\"Search robot\"/>\n    </div>\n  )\n}\nexport default SearchBar","import { Component } from \"react\";\nimport CardList from './Components/CardList/CardList';\nimport SearchBar from './Components/SearchBar/SearchBar';\nimport './App.css'\n\ninterface Monster {\n  id: string;\n  name: string;\n  email: string;\n  address: {\n    city: string\n  };\n}\ninterface State {\n  monsters: Array<Monster>;\n  filteredMonsters: Array<Monster>;\n  loading: boolean;\n}\ninterface Props { }\nclass App extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      monsters: [],\n      filteredMonsters: [],\n      loading: true,\n    };\n  }\n  fetchData = async () => {\n    const data = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ loading: false })\n    return await data.json();\n  };\n  componentDidMount() {\n    this.fetchData().then((monsters) => this.setState({ monsters }));\n  }\n  render() {\n    const filterMonsters = (e: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState((state) => ({\n        filteredMonsters: state.monsters.filter(monster => monster.name.toLowerCase().includes(e.target.value.toLowerCase()))\n      }))\n    }\n    return (\n      <div>\n        <h1 className=\"center\">Monsters Roledex</h1>\n        <SearchBar handleText={filterMonsters} />\n        {\n          this.state.loading ? <h1>LOADING</h1> :\n            <CardList monsters={this.state.filteredMonsters.length?this.state.filteredMonsters:this.state.monsters} />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}